/// <reference types="tree-sitter-cli/dsl" />
// @ts-check

module.exports = grammar({
  name: "ssa",

  rules: {
    ssa: ($) => repeat1($.section),

    section: ($) =>
      choice(
        $.section_info,
        $.section_styles,
        $.section_events,
        $.section_fonts,
        $.section_graphics,
      ),

    section_info: ($) => seq($.section_info_name, repeat($.info_body_row)),
    section_info_name: ($) => seq("[", "Script Info", "]", "\n"),

    section_styles: ($) =>
      seq(
        $.section_styles_name,
        $.styles_header_row,
        repeat($.styles_body_row),
      ),
    // TODO: Add support of Styles+
    section_styles_name: ($) => seq("[", "V4 Styles", "]", "\n"),

    section_events: ($) =>
      seq(
        $.section_events_name,
        $.events_header_row,
        repeat($.events_body_row),
      ),
    section_events_name: ($) => seq("[", "Events", "]", "\n"),

    section_fonts: ($) => seq($.section_fonts_name, repeat($.fonts_body_row)),
    section_fonts_name: ($) => seq("[", "Fonts", "]", "\n"),

    section_graphics: ($) =>
      seq($.section_graphics_name, repeat($.graphics_body_row)),
    section_graphics_name: ($) => seq("[", "Graphics", "]", "\n"),

    styles_header_row: ($) =>
      seq(
        $.styles_header_name,
        $._comma,
        $.styles_header_font_name,
        $._comma,
        $.styles_header_font_size,
        $._comma,
        $.styles_header_primary_color,
        $._comma,
        $.styles_header_secondary_color,
        $._comma,
        $.styles_header_tertiary_color,
        $._comma,
        $.styles_header_back_color,
        $._comma,
        $.styles_header_bold,
        $._comma,
        $.styles_header_italic,
        $._comma,
        $.styles_header_border_style,
        $._comma,
        $.styles_header_outline,
        $._comma,
        $.styles_header_shadow,
        $._comma,
        $.styles_header_alignment,
        $._comma,
        $.styles_header_margin_l,
        $._comma,
        $.styles_header_margin_r,
        $._comma,
        $.styles_header_margin_v,
        $._comma,
        $.styles_header_alpha_level,
        $._comma,
        $.styles_header_encoding,
        "\n",
      ),
    styles_header_name: ($) => "Format: Name",
    styles_header_font_name: ($) => "Fontname",
    styles_header_font_size: ($) => "Fontsize",
    styles_header_primary_color: ($) => "PrimaryColour",
    styles_header_secondary_color: ($) => "SecondaryColour",
    styles_header_tertiary_color: ($) => "TertiaryColour",
    styles_header_back_color: ($) => "BackColour",
    styles_header_bold: ($) => "Bold",
    styles_header_italic: ($) => "Italic",
    styles_header_border_style: ($) => "BorderStyle",
    styles_header_outline: ($) => "Outline",
    styles_header_shadow: ($) => "Shadow",
    styles_header_alignment: ($) => "Alignment",
    styles_header_margin_l: ($) => "MarginL",
    styles_header_margin_r: ($) => "MarginR",
    styles_header_margin_v: ($) => "MarginV",
    styles_header_alpha_level: ($) => "AlphaLevel",
    styles_header_encoding: ($) => "Encoding",

    styles_body_row: ($) =>
      seq(
        "Style",
        /\s*:\s*/,
        $.style_name,
        $._comma,
        $.style_font_name,
        $._comma,
        $.style_font_size,
        $._comma,
        $.style_primary_color,
        $._comma,
        $.style_secondary_color,
        $._comma,
        $.style_tertiary_color,
        $._comma,
        $.style_back_color,
        $._comma,
        $.style_bold,
        $._comma,
        $.style_italic,
        $._comma,
        $.style_border_style,
        $._comma,
        $.style_outline,
        $._comma,
        $.style_shadow,
        $._comma,
        $.style_alignment,
        $._comma,
        $.style_margin_l,
        $._comma,
        $.style_margin_r,
        $._comma,
        $.style_margin_v,
        $._comma,
        $.style_alpha_level,
        $._comma,
        $.style_encoding,
        "\n",
      ),
    style_name: ($) => /\w+/,
    style_font_name: ($) => /[A-Za-z\s]+/,
    style_font_size: ($) => /\d+/,
    style_primary_color: ($) => /\d+/,
    style_secondary_color: ($) => /\d+/,
    style_tertiary_color: ($) => /\d+/,
    style_back_color: ($) => /\d+/,
    style_bold: ($) => /\d+/,
    style_italic: ($) => /\d+/,
    style_border_style: ($) => /\d+/,
    style_outline: ($) => /\d+/,
    style_shadow: ($) => /\d+/,
    style_alignment: ($) => /\d+/,
    style_margin_l: ($) => /\d+/,
    style_margin_r: ($) => /\d+/,
    style_margin_v: ($) => /\d+/,
    style_alpha_level: ($) => /\d+/,
    style_encoding: ($) => /\d+/,

    events_header_row: ($) =>
      seq(
        $.events_header_format,
        $._comma,
        $.events_header_start,
        $._comma,
        $.events_header_end,
        $._comma,
        $.events_header_style,
        $._comma,
        $.events_header_name,
        $._comma,
        $.events_header_margin_l,
        $._comma,
        $.events_header_margin_r,
        $._comma,
        $.events_header_margin_v,
        $._comma,
        $.events_header_effect,
        $._comma,
        $.events_header_text,
        "\n",
      ),
    events_header_format: ($) => "Format: Marked",
    events_header_start: ($) => "Start",
    events_header_end: ($) => "End",
    events_header_style: ($) => "Style",
    events_header_name: ($) => "Name",
    events_header_margin_l: ($) => "MarginL",
    events_header_margin_r: ($) => "MarginR",
    events_header_margin_v: ($) => "MarginV",
    events_header_effect: ($) => "Effect",
    events_header_text: ($) => "Text",

    _comma: ($) => /\s*,\s*/,

    info_body_row: ($) => choice($.info_comment, $.info_prop),
    info_comment: ($) => token(seq(";", /.*/, "\n")),
    info_prop: ($) => seq($.info_prop_name, ": ", $.info_prop_value, "\n"),

    //info_prop_name: ($) => /[^=]+/,
    info_prop_name: ($) =>
      choice(
        "Title",
        "OriginalScript",
        "OriginalTranslation",
        "OriginalEditing",
        "OriginalTiming",
        "SynchPoint",
        "ScriptUpdatedBy",
        "UpdateDetails",
        "ScriptType",
        "Collisions",
        "PlayResY",
        "PlayResX",
        "PlayDepth",
        "Timer",
        "WrapStyle",
        "ScaledBorderAndShadow",
      ),
    info_prop_value: ($) => /.+/,

    events_body_row: ($) =>
      choice(
        $.event_dialogue_row,
        $.event_comment_row,
        $.event_picture_row,
        $.event_sound_row,
        $.event_movie_row,
        $.event_command_row,
      ),

    event_dialogue_row: ($) =>
      seq(
        $.event_type_dialogue,
        /\s*:\s*/,
        "Marked",
        /\s*=\s*/,
        $.event_is_marked,
        $._comma,
        $.event_start,
        $._comma,
        $.event_end,
        $._comma,
        optional($.event_style),
        $._comma,
        optional($.event_name),
        $._comma,
        $.event_margin_l,
        $._comma,
        $.event_margin_r,
        $._comma,
        $.event_margin_v,
        $._comma,
        optional($.event_effect),
        $._comma,
        optional($.event_text),
        "\n",
      ),
    event_type_dialogue: ($) => "Dialogue",

    event_comment_row: ($) =>
      seq(
        $.event_type_comment,
        /\s*:\s*/,
        "Marked",
        /\s*=\s*/,
        $.event_is_marked,
        $._comma,
        $.event_start,
        $._comma,
        $.event_end,
        $._comma,
        optional($.event_style),
        $._comma,
        optional($.event_name),
        $._comma,
        $.event_margin_l,
        $._comma,
        $.event_margin_r,
        $._comma,
        $.event_margin_v,
        $._comma,
        optional($.event_effect),
        $._comma,
        optional($.event_text),
        "\n",
      ),
    event_type_comment: ($) => "Comment",

    event_picture_row: ($) =>
      seq(
        $.event_type_picture,
        /\s*:\s*/,
        "Marked",
        /\s*=\s*/,
        $.event_is_marked,
        $._comma,
        $.event_start,
        $._comma,
        $.event_end,
        $._comma,
        optional($.event_style),
        $._comma,
        optional($.event_name),
        $._comma,
        $.event_margin_l,
        $._comma,
        $.event_margin_r,
        $._comma,
        $.event_margin_v,
        $._comma,
        optional($.event_effect),
        $._comma,
        optional($.event_text),
        "\n",
      ),
    event_type_picture: ($) => "Picture",

    event_sound_row: ($) =>
      seq(
        $.event_type_sound,
        /\s*:\s*/,
        "Marked",
        /\s*=\s*/,
        $.event_is_marked,
        $._comma,
        $.event_start,
        $._comma,
        $.event_end,
        $._comma,
        optional($.event_style),
        $._comma,
        optional($.event_name),
        $._comma,
        $.event_margin_l,
        $._comma,
        $.event_margin_r,
        $._comma,
        $.event_margin_v,
        $._comma,
        optional($.event_effect),
        $._comma,
        optional($.event_text),
        "\n",
      ),
    event_type_sound: ($) => "Sound",

    event_movie_row: ($) =>
      seq(
        $.event_type_movie,
        /\s*:\s*/,
        "Marked",
        /\s*=\s*/,
        $.event_is_marked,
        $._comma,
        $.event_start,
        $._comma,
        $.event_end,
        $._comma,
        optional($.event_style),
        $._comma,
        optional($.event_name),
        $._comma,
        $.event_margin_l,
        $._comma,
        $.event_margin_r,
        $._comma,
        $.event_margin_v,
        $._comma,
        optional($.event_effect),
        $._comma,
        optional($.event_text),
        "\n",
      ),
    event_type_movie: ($) => "Movie",

    event_command_row: ($) =>
      seq(
        $.event_type_command,
        /\s*:\s*/,
        "Marked",
        /\s*=\s*/,
        $.event_is_marked,
        $._comma,
        $.event_start,
        $._comma,
        $.event_end,
        $._comma,
        optional($.event_style),
        $._comma,
        optional($.event_name),
        $._comma,
        $.event_margin_l,
        $._comma,
        $.event_margin_r,
        $._comma,
        $.event_margin_v,
        $._comma,
        optional($.event_effect),
        $._comma,
        optional($.event_text),
        "\n",
      ),
    event_type_command: ($) => "Command",

    event_is_marked: ($) => choice("0", "1"),
    event_start: ($) => /\d{1,2}:\d{2}:\d{2}[:\.]\d{1,2}/,
    event_end: ($) => /\d{1,2}:\d{2}:\d{2}[:\.]\d{1,2}/,
    event_style: ($) => /[\w\-]+/,
    event_name: ($) => /[\w\-]+/,
    event_margin_l: ($) => /\d+/,
    event_margin_r: ($) => /\d+/,
    event_margin_v: ($) => /\d+/,
    event_effect: ($) => /[\w\-]+/,
    event_text: ($) => /.+/,

    fonts_body_row: ($) => seq("aaa", "\n"),
    graphics_body_row: ($) => seq("bbb", "\n"),
  },
});
